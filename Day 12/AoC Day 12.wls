#!/usr/bin/env wolframscript
(* ::Package:: *)

(* ::Text:: *)
(*Written December 12th, 2021.*)


(* ::Subsubsection:: *)
(*Import & Setup*)


(* ::Input:: *)
(*input=StringSplit[#,"-"]&/@Import[FileNameJoin[{NotebookDirectory[],"Day12Input.txt"}],"List"];*)
(*g=Graph[#[[1]]\[UndirectedEdge]#[[2]]&/@input,VertexLabels->Automatic];*)
(**)
(*tallyGather[tallies_List]:={#[[1,1]],Total[#[[;;,2]]]}&/@GatherBy[Flatten[tallies,1],First];*)
(**)
(*vertexList=Select[VertexList[g],#!="start"&];*)
(*lower=Select[vertexList,LowerCaseQ[#]\[And]#!="end"&];*)
(*ClearAll@possible;*)
(*possible[vertex_]:=possible[vertex]=Select[vertexList,GraphDistance[g,vertex,#]==1&];*)


(* ::Subsubsection:: *)
(*Part 1*)


(* ::Input:: *)
(*state={{"start",{{"start",1}},1}};*)
(*count=0;*)
(*Do[*)
(*state=*)
(*{#[[1,1]],#[[1,2]],Total[#[[;;,3]]]}&/@*)
(*GatherBy[*)
(*Flatten[*)
(*Table[*)
(*Select[*)
(*{#,tallyGather[{s[[2]],{{#,1}}}],s[[3]]}&/@possible[s[[1]]],*)
(*Max[Select[lower/.(Function[x,x[[1]]->x[[2]]]/@#[[2]]),NumberQ]]<=1&*)
(*]*)
(*,{s,state}],1],{#[[1]],#[[2]]}&];*)
(*count+=Total[Select[state,#[[1]]=="end"&][[;;,3]]];*)
(*nonEnds=Select[state,#[[1]]!="end"&];*)
(*state=nonEnds;*)
(*If[Length[state]== 0,Break[]];*)
(*,*)
(*{i,10^6}];*)
(*count*)


(* ::Subsubsection:: *)
(*Part 2*)


(* ::Input:: *)
(*state={{"start",{{"start",1}},1}};*)
(*v=Select[VertexList[g],#!="start"&];*)
(*count=0;*)
(*Do[*)
(*state=*)
(*{#[[1,1]],#[[1,2]],Total[#[[;;,3]]]}&/@*)
(*GatherBy[*)
(*Flatten[*)
(*Table[*)
(*Select[*)
(*{#,tallyGather[{s[[2]],{{#,1}}}],s[[3]]}&/@Select[v,GraphDistance[g,s[[1]],#]==1&],*)
(*Max[Select[{"lg","pt","uq","nx","ve","sx"}/.(Function[x,x[[1]]->x[[2]]]/@#[[2]]),NumberQ]]<=2\[And]*)
(*Count[Select[{"lg","pt","uq","nx","ve","sx"}/.(Function[x,x[[1]]->x[[2]]]/@#[[2]]),NumberQ],2]<=1&*)
(*]*)
(*,{s,state}],1],{#[[1]],#[[2]]}&];*)
(*ends=Select[state,#[[1]]=="end"&];*)
(*count+=Total[ends[[;;,3]]];*)
(*nonEnds=Select[state,#[[1]]!="end"&];*)
(*state=nonEnds;*)
(*If[Length[state]== 0,Break[]];*)
(*,*)
(*{i,10^6}];*)
(*count*)


(* ::Subsubsection:: *)
(*Cleaned Up*)


(* ::Input:: *)
(*vertexList=Select[VertexList[g],#!="start"&];*)
(*lower=Select[vertexList,LowerCaseQ[#]\[And]#!="end"&];*)
(*ClearAll@possible;*)
(*possible[vertex_]:=possible[vertex]=Select[vertexList,GraphDistance[g,vertex,#]==1&];*)
(**)
(*state={{"start"}};*)
(*count=0;*)
(*While[*)
(*Length[state]>0,*)
(*state=Select[*)
(*Flatten[Table[Join[s,{#}]&/@possible[s[[-1]]],{s,state}],1],*)
(*Max[Table[Count[#,l],{l,lower}]]<=1&*)
(*];*)
(*count+=Count[state,_?(#[[-1]]=="end"&)];*)
(*state=Select[state,#[[-1]]!="end"&];*)
(*]*)
(*count*)
